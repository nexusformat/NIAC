.. auto-generated by script ../../../../utils/nxdl2rst.py from the NXDL source NXcrystal.nxdl.xml

.. index::
    ! NXcrystal (base class)
    ! crystal (base class)
    see: crystal (base class); NXcrystal

.. _NXcrystal:

=========
NXcrystal
=========

**Status**:

  base class, extends :ref:`NXobject`, version 1.0

**Description**:

  A crystal monochromator or analyzer.

  Permits double bent
  monochromator comprised of multiple segments with anisotropic 
  Gaussian mosaic.

  If curvatures are set to zero or are absent, array 
  is considered to be flat.

  Scattering vector is perpendicular to surface. Crystal is oriented
  parallel to beam incident on crystal before rotation, and lies in
  vertical plane.

**Symbols**:

  These symbols will be used below to coordinate dimensions with the same lengths.

  **n_comp**: number of different unit cells to be described

  **i**: number of wavelengths

**Groups cited**:
  :ref:`NXdata`, :ref:`NXgeometry`, :ref:`NXlog`, :ref:`NXshape`

.. index:: NXgeometry (base class); used in base class, NXlog (base class); used in base class, NXdata (base class); used in base class, NXshape (base class); used in base class

**Structure**:

  .. index:: usage (field)

  **usage**: :ref:`NX_CHAR <NX_CHAR>`

    How this crystal is used.  Choices are in the list.

    Any of these values:

      * ``Bragg``: reflection geometry

      * ``Laue``: The chemical formula specified using CIF conventions. Abbreviated version of CIF standard:  * Only recognized element symbols may be used. * Each element symbol is followed by a 'count' number. A count of '1' may be omitted. * A space or parenthesis must separate each cluster of (element symbol + count). * Where a group of elements is enclosed in parentheses, the multiplier for the    group must follow the closing parentheses. That is, all element and group    multipliers are assumed to be printed as subscripted numbers. * Unless the elements are ordered in a manner that corresponds to their chemical    structure, the order of the elements within any group or moiety depends on    whether or not carbon is present. * If carbon is present, the order should be:    C, then H, then the other elements in alphabetical order of their symbol.    If carbon is not present, the elements are listed purely in alphabetic    order of their symbol.  This is the *Hill* system used by Chemical Abstracts. See, for example: http://www.iucr.org/__data/iucr/cif/standard/cifstd15.html, http://www.cas.org/training/stneasytips/subinforformula1.html, or http://www.indiana.edu/~cheminfo/courses/471cnfs.html.


  .. index:: type (field)

  **type**: :ref:`NX_CHAR <NX_CHAR>`

    Type or material of monochromating substance.  
    Chemical formula can be specified separately.
    Use the "reflection" field to indicate the (hkl) orientation.
    Use the "d_spacing" field to record the lattice plane spacing.

    This field was changed (2010-11-17) from an enumeration to
    a string since common usage showed a wider variety of use
    than a simple list.  These are the items in the list at 
    the time of the change: PG (Highly Oriented Pyrolytic Graphite) |
    Ge | Si | Cu | Fe3Si | CoFe | Cu2MnAl (Heusler) | Multilayer |
    Diamond.

  .. index:: chemical formula (field)

  **chemical_formula**: :ref:`NX_CHAR <NX_CHAR>`

    The chemical formula specified using CIF conventions.
    Abbreviated version of CIF standard:

    * Only recognized element symbols may be used.
    * Each element symbol is followed by a 'count' number. A count of '1' may be omitted.
    * A space or parenthesis must separate each cluster of (element symbol + count).
    * Where a group of elements is enclosed in parentheses, the multiplier for the 
      group must follow the closing parentheses. That is, all element and group 
      multipliers are assumed to be printed as subscripted numbers.
    * Unless the elements are ordered in a manner that corresponds to their chemical 
      structure, the order of the elements within any group or moiety depends on 
      whether or not carbon is present.
    * If carbon is present, the order should be: 
      C, then H, then the other elements in alphabetical order of their symbol. 
      If carbon is not present, the elements are listed purely in alphabetic 
      order of their symbol. 
    * This is the *Hill* system used by Chemical Abstracts.

  .. index:: order no (field)

  **order_no**: :ref:`NX_INT <NX_INT>`

    A number which describes if this is the first, second,.. 
    :math:`n^{th}` crystal in a multi crystal monochromator

  .. index:: cut angle (field)

  **cut_angle**: :ref:`NX_FLOAT <NX_FLOAT>` {units=\ :ref:`NX_ANGLE <NX_ANGLE>`}

    Cut angle of reflecting Bragg plane and plane of crystal surface

  .. index:: space group (field)

  **space_group**: :ref:`NX_CHAR <NX_CHAR>`

    Space group of crystal structure

  .. index:: unit cell (field)

  **unit_cell[n_comp, 6]**: :ref:`NX_FLOAT <NX_FLOAT>` {units=\ :ref:`NX_LENGTH <NX_LENGTH>`}

    Unit cell parameters (lengths and angles)

  .. index:: unit cell a (field)

  **unit_cell_a**: :ref:`NX_FLOAT <NX_FLOAT>` {units=\ :ref:`NX_LENGTH <NX_LENGTH>`}

    Unit cell lattice parameter: length of side a

  .. index:: unit cell b (field)

  **unit_cell_b**: :ref:`NX_FLOAT <NX_FLOAT>` {units=\ :ref:`NX_LENGTH <NX_LENGTH>`}

    Unit cell lattice parameter: length of side b

  .. index:: unit cell c (field)

  **unit_cell_c**: :ref:`NX_FLOAT <NX_FLOAT>` {units=\ :ref:`NX_LENGTH <NX_LENGTH>`}

    Unit cell lattice parameter: length of side c

  .. index:: unit cell alpha (field)

  **unit_cell_alpha**: :ref:`NX_FLOAT <NX_FLOAT>` {units=\ :ref:`NX_ANGLE <NX_ANGLE>`}

    Unit cell lattice parameter: angle alpha

  .. index:: unit cell beta (field)

  **unit_cell_beta**: :ref:`NX_FLOAT <NX_FLOAT>` {units=\ :ref:`NX_ANGLE <NX_ANGLE>`}

    Unit cell lattice parameter: angle beta

  .. index:: unit cell gamma (field)

  **unit_cell_gamma**: :ref:`NX_FLOAT <NX_FLOAT>` {units=\ :ref:`NX_ANGLE <NX_ANGLE>`}

    Unit cell lattice parameter: angle gamma

  .. index:: unit cell volume (field)

  **unit_cell_volume**: :ref:`NX_FLOAT <NX_FLOAT>` {units=\ :ref:`NX_VOLUME <NX_VOLUME>`}

    Volume of the unit cell

  .. index:: orientation matrix (field)

  **orientation_matrix[3, 3]**: :ref:`NX_FLOAT <NX_FLOAT>`

    Orientation matrix of single crystal sample using Busing-Levy convention:
    W. R. Busing and H. A. Levy (1967). Acta Cryst. 22, 457-464

  .. index:: wavelength (field)

  **wavelength[i]**: :ref:`NX_FLOAT <NX_FLOAT>` {units=\ :ref:`NX_WAVELENGTH <NX_WAVELENGTH>`}

    Optimum diffracted wavelength

  .. index:: d spacing (field)

  **d_spacing**: :ref:`NX_FLOAT <NX_FLOAT>` {units=\ :ref:`NX_LENGTH <NX_LENGTH>`}

    spacing between crystal planes of the reflection

  .. index:: scattering vector (field)

  **scattering_vector**: :ref:`NX_FLOAT <NX_FLOAT>` {units=\ :ref:`NX_WAVENUMBER <NX_WAVENUMBER>`}

    Scattering vector, Q, of nominal reflection

  .. index:: reflection (field)

  **reflection[3]**: :ref:`NX_INT <NX_INT>` {units=\ :ref:`NX_UNITLESS <NX_UNITLESS>`}

    Miller indices (hkl) values of nominal reflection

  .. index:: thickness (field)

  **thickness**: :ref:`NX_FLOAT <NX_FLOAT>` {units=\ :ref:`NX_LENGTH <NX_LENGTH>`}

    Thickness of the crystal.  (Required for Laue orientations - see "usage" field)

  .. index:: density (field)

  **density**: :ref:`NX_NUMBER <NX_NUMBER>` {units=\ :ref:`NX_MASS_DENSITY <NX_MASS_DENSITY>`}

    mass density of the crystal

  .. index:: segment width (field)

  **segment_width**: :ref:`NX_FLOAT <NX_FLOAT>` {units=\ :ref:`NX_LENGTH <NX_LENGTH>`}

    Horizontal width of individual segment

  .. index:: segment height (field)

  **segment_height**: :ref:`NX_FLOAT <NX_FLOAT>` {units=\ :ref:`NX_LENGTH <NX_LENGTH>`}

    Vertical height of individual segment

  .. index:: segment thickness (field)

  **segment_thickness**: :ref:`NX_FLOAT <NX_FLOAT>` {units=\ :ref:`NX_LENGTH <NX_LENGTH>`}

    Thickness of individual segment

  .. index:: segment gap (field)

  **segment_gap**: :ref:`NX_FLOAT <NX_FLOAT>` {units=\ :ref:`NX_LENGTH <NX_LENGTH>`}

    Typical gap between adjacent segments

  .. index:: segment columns (field)

  **segment_columns**: :ref:`NX_FLOAT <NX_FLOAT>` {units=\ :ref:`NX_LENGTH <NX_LENGTH>`}

    number of segment columns in horizontal direction

  .. index:: segment rows (field)

  **segment_rows**: :ref:`NX_FLOAT <NX_FLOAT>` {units=\ :ref:`NX_LENGTH <NX_LENGTH>`}

    number of segment rows in vertical direction

  .. index:: mosaic horizontal (field)

  **mosaic_horizontal**: :ref:`NX_FLOAT <NX_FLOAT>` {units=\ :ref:`NX_ANGLE <NX_ANGLE>`}

    horizontal mosaic Full Width Half Maximum

  .. index:: mosaic vertical (field)

  **mosaic_vertical**: :ref:`NX_FLOAT <NX_FLOAT>` {units=\ :ref:`NX_ANGLE <NX_ANGLE>`}

    vertical mosaic Full Width Half Maximum

  .. index:: curvature horizontal (field)

  **curvature_horizontal**: :ref:`NX_FLOAT <NX_FLOAT>` {units=\ :ref:`NX_ANGLE <NX_ANGLE>`}

    Horizontal curvature of focusing crystal

  .. index:: curvature vertical (field)

  **curvature_vertical**: :ref:`NX_FLOAT <NX_FLOAT>` {units=\ :ref:`NX_ANGLE <NX_ANGLE>`}

    Vertical curvature of focusing crystal

  .. index:: is cylindrical (field)

  **is_cylindrical**: :ref:`NX_BOOLEAN <NX_BOOLEAN>`

    Is this crystal bent cylindrically?

  .. index:: cylindrical orientation angle (field)

  **cylindrical_orientation_angle**: :ref:`NX_NUMBER <NX_NUMBER>` {units=\ :ref:`NX_ANGLE <NX_ANGLE>`}

    If cylindrical: cylinder orientation angle

  .. index:: polar angle (field)

  **polar_angle[i]**: :ref:`NX_FLOAT <NX_FLOAT>` {units=\ :ref:`NX_ANGLE <NX_ANGLE>`}

    Polar (scattering) angle at which crystal assembly is positioned.  
    Note: some instrument geometries call this term 2theta.

  .. index:: azimuthal angle (field)

  **azimuthal_angle[i]**: :ref:`NX_FLOAT <NX_FLOAT>` {units=\ :ref:`NX_ANGLE <NX_ANGLE>`}

    Azimuthal angle at which crystal assembly is positioned

  .. index:: bragg angle (field)

  **bragg_angle[i]**: :ref:`NX_FLOAT <NX_FLOAT>` {units=\ :ref:`NX_ANGLE <NX_ANGLE>`}

    Bragg angle of nominal reflection

  .. index:: temperature (field)

  **temperature**: :ref:`NX_FLOAT <NX_FLOAT>` {units=\ :ref:`NX_TEMPERATURE <NX_TEMPERATURE>`}

    average/nominal crystal temperature

  .. index:: temperature coefficient (field)

  **temperature_coefficient**: :ref:`NX_FLOAT <NX_FLOAT>` {units=\ :ref:`NX_ANY <NX_ANY>`}

    how lattice parameter changes with temperature

  **(geometry)**: :ref:`NXgeometry`

    Position of crystal

  **temperature_log**: :ref:`NXlog`

    log file of crystal temperature

  **reflectivity**: :ref:`NXdata`

    crystal reflectivity versus wavelength

  **transmission**: :ref:`NXdata`

    crystal transmission versus wavelength

  **shape**: :ref:`NXshape`

    A NXshape group describing the shape of the crystal arrangement

**NXDL Source**:
  https://github.com/nexusformat/definitions/blob/master/base_classes/NXcrystal.nxdl.xml
