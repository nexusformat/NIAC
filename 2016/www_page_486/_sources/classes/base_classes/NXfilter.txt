.. auto-generated by script ../../../../utils/nxdl2rst.py from the NXDL source NXfilter.nxdl.xml

.. index::
    ! NXfilter (base class)
    ! filter (base class)
    see: filter (base class); NXfilter

.. _NXfilter:

========
NXfilter
========

**Status**:

  base class, extends :ref:`NXobject`, version 1.0

**Description**:

  For band pass beam filters.

  If uncertain whether to use :ref:`NXfilter` (band-pass filter)
  or :ref:`NXattenuator` (reduces beam intensity), then use 
  :ref:`NXattenuator`.

**Symbols**:

  No symbol table

**Groups cited**:
  :ref:`NXdata`, :ref:`NXgeometry`, :ref:`NXlog`, :ref:`NXsensor`

.. index:: NXgeometry (base class); used in base class, NXdata (base class); used in base class, NXlog (base class); used in base class, NXsensor (base class); used in base class

**Structure**:

  .. index:: description (field)

  **description**: :ref:`NX_CHAR <NX_CHAR>`

    Composition of the filter.  Chemical formula can be specified separately.

    This field was changed (2010-11-17) from an enumeration to
    a string since common usage showed a wider variety of use
    than a simple list.  These are the items in the list at 
    the time of the change: Beryllium | Pyrolytic Graphite |
    Graphite | Sapphire | Silicon | Supermirror.

  .. index:: status (field)

  **status**: :ref:`NX_CHAR <NX_CHAR>`

    position with respect to in or out of the beam (choice of only "in" or "out")

    Any of these values:

      * ``in``: in the beam

      * ``out``: out of the beam


  .. index:: temperature (field)

  **temperature**: :ref:`NX_FLOAT <NX_FLOAT>` {units=\ :ref:`NX_TEMPERATURE <NX_TEMPERATURE>`}

    average/nominal filter temperature

  .. index:: thickness (field)

  **thickness**: :ref:`NX_FLOAT <NX_FLOAT>` {units=\ :ref:`NX_LENGTH <NX_LENGTH>`}

    Thickness of the filter

  .. index:: density (field)

  **density**: :ref:`NX_NUMBER <NX_NUMBER>` {units=\ :ref:`NX_MASS_DENSITY <NX_MASS_DENSITY>`}

    mass density of the filter

  .. index:: chemical formula (field)

  **chemical_formula**: :ref:`NX_CHAR <NX_CHAR>`

    The chemical formula specified using CIF conventions.
    Abbreviated version of CIF standard:

    * Only recognized element symbols may be used.
    * Each element symbol is followed by a 'count' number. A count of '1' may be omitted.
    * A space or parenthesis must separate each cluster of (element symbol + count).
    * Where a group of elements is enclosed in parentheses, the multiplier for the 
      group must follow the closing parentheses. That is, all element and group 
      multipliers are assumed to be printed as subscripted numbers.
    * Unless the elements are ordered in a manner that corresponds to their chemical 
      structure, the order of the elements within any group or moiety depends on 
      whether or not carbon is present.
    * If carbon is present, the order should be:

      * C, then H, then the other elements in alphabetical order of their symbol. 
      * If carbon is not present, the elements are listed purely in alphabetic order of their symbol.

    * This is the *Hill* system used by Chemical Abstracts.

  .. index:: unit cell a (field)

  **unit_cell_a**: :ref:`NX_FLOAT <NX_FLOAT>` {units=\ :ref:`NX_LENGTH <NX_LENGTH>`}

    Unit cell lattice parameter: length of side a

  .. index:: unit cell b (field)

  **unit_cell_b**: :ref:`NX_FLOAT <NX_FLOAT>` {units=\ :ref:`NX_LENGTH <NX_LENGTH>`}

    Unit cell lattice parameter: length of side b

  .. index:: unit cell c (field)

  **unit_cell_c**: :ref:`NX_FLOAT <NX_FLOAT>` {units=\ :ref:`NX_LENGTH <NX_LENGTH>`}

    Unit cell lattice parameter: length of side c

  .. index:: unit cell alpha (field)

  **unit_cell_alpha**: :ref:`NX_FLOAT <NX_FLOAT>` {units=\ :ref:`NX_ANGLE <NX_ANGLE>`}

    Unit cell lattice parameter: angle alpha

  .. index:: unit cell beta (field)

  **unit_cell_beta**: :ref:`NX_FLOAT <NX_FLOAT>` {units=\ :ref:`NX_ANGLE <NX_ANGLE>`}

    Unit cell lattice parameter: angle beta

  .. index:: unit cell gamma (field)

  **unit_cell_gamma**: :ref:`NX_FLOAT <NX_FLOAT>` {units=\ :ref:`NX_ANGLE <NX_ANGLE>`}

    Unit cell lattice parameter: angle gamma

  .. index:: unit cell volume (field)

  **unit_cell_volume[n_comp]**: :ref:`NX_FLOAT <NX_FLOAT>` {units=\ :ref:`NX_VOLUME <NX_VOLUME>`}

    Unit cell

  .. index:: orientation matrix (field)

  **orientation_matrix[n_comp, 3, 3]**: :ref:`NX_FLOAT <NX_FLOAT>`

    Orientation matrix of single crystal filter using Busing-Levy convention:
    W. R. Busing and H. A. Levy (1967). Acta Cryst. 22, 457-464

  .. index:: m value (field)

  **m_value**: :ref:`NX_FLOAT <NX_FLOAT>` {units=\ :ref:`NX_DIMENSIONLESS <NX_DIMENSIONLESS>`}

    m value of supermirror filter

  .. index:: substrate material (field)

  **substrate_material**: :ref:`NX_CHAR <NX_CHAR>`

    substrate material of supermirror filter

  .. index:: substrate thickness (field)

  **substrate_thickness**: :ref:`NX_FLOAT <NX_FLOAT>` {units=\ :ref:`NX_LENGTH <NX_LENGTH>`}

    substrate thickness of supermirror filter

  .. index:: coating material (field)

  **coating_material**: :ref:`NX_CHAR <NX_CHAR>`

    coating material of supermirror filter

  .. index:: substrate roughness (field)

  **substrate_roughness**: :ref:`NX_FLOAT <NX_FLOAT>` {units=\ :ref:`NX_LENGTH <NX_LENGTH>`}

    substrate roughness (RMS) of supermirror filter

  .. index:: coating roughness (field)

  **coating_roughness[nsurf]**: :ref:`NX_FLOAT <NX_FLOAT>` {units=\ :ref:`NX_LENGTH <NX_LENGTH>`}

    coating roughness (RMS) of supermirror filter

  **(geometry)**: :ref:`NXgeometry`

    Geometry of the filter

  **transmission**: :ref:`NXdata`

    Wavelength transmission profile of filter

  **temperature_log**: :ref:`NXlog`

    Linked temperature_log for the filter

  **sensor_type**: :ref:`NXsensor`

    Sensor(s)used to monitor the filter temperature

**NXDL Source**:
  https://github.com/nexusformat/definitions/blob/master/base_classes/NXfilter.nxdl.xml
