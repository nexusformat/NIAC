.. auto-generated by script ../../../../utils/nxdl2rst.py from the NXDL source NXxbase.nxdl.xml

.. index::
    ! NXxbase (application definition)
    ! xbase (application definition)
    see: xbase (application definition); NXxbase

.. _NXxbase:

=======
NXxbase
=======

**Status**:

  application definition, extends :ref:`NXobject`, version 1.0b

**Description**:

  This definition covers the common parts of all monochromatic single crystal raw data application definitions.

**Symbols**:

  No symbol table

**Groups cited**:
  :ref:`NXdata`, :ref:`NXdetector`, :ref:`NXentry`, :ref:`NXinstrument`, :ref:`NXmonitor`, :ref:`NXmonochromator`, :ref:`NXsample`, :ref:`NXsource`

.. index:: NXentry (base class); used in application definition, NXinstrument (base class); used in application definition, NXsource (base class); used in application definition, NXmonochromator (base class); used in application definition, NXdetector (base class); used in application definition, NXsample (base class); used in application definition, NXmonitor (base class); used in application definition, NXdata (base class); used in application definition

**Structure**:

  **entry**: :ref:`NXentry`


    .. index:: title (field)

    **title**: :ref:`NX_CHAR <NX_CHAR>`


    .. index:: start time (field)

    **start_time**: :ref:`NX_DATE_TIME <NX_DATE_TIME>`


    .. index:: definition (field)

    **definition**: :ref:`NX_CHAR <NX_CHAR>`

      Official NeXus NXDL schema to which this file conforms

      Obligatory value:  ``NXxbase``

    **instrument**: :ref:`NXinstrument`


      **source**: :ref:`NXsource`


        .. index:: type (field)

        **type**: :ref:`NX_CHAR <NX_CHAR>`


        .. index:: name (field)

        **name**: :ref:`NX_CHAR <NX_CHAR>`


        .. index:: probe (field)

        **probe**: :ref:`NX_CHAR <NX_CHAR>`


          Any of these values: ``neutron`` | ``x-ray`` | ``electron``

      **monochromator**: :ref:`NXmonochromator`


        .. index:: wavelength (field)

        **wavelength**: :ref:`NX_FLOAT <NX_FLOAT>` {units=\ :ref:`NX_WAVELENGTH <NX_WAVELENGTH>`}


      **detector**: :ref:`NXdetector`

        The name of the group is detector if there is only one detector, 
        if there are several,  names have to be detector1, 
        detector2, ...detectorn.

        .. index:: data (field)

        **data[np, number of x pixels, number of y pixels]**: :ref:`NX_INT <NX_INT>`

          The area detector data, the first dimension is always the
          number of scan points, the second and third are the number
          of pixels in x and y. The origin is always assumed to be
          in the center of the detector. maxOccurs is limited to the
          the number of detectors on your instrument.

          .. index:: signal (field attribute)

          **@signal**: :ref:`NX_POSINT <NX_POSINT>`


            Obligatory value:  ``1``

        .. index:: x pixel size (field)

        **x_pixel_size**: :ref:`NX_FLOAT <NX_FLOAT>` {units=\ :ref:`NX_LENGTH <NX_LENGTH>`}


        .. index:: y pixel size (field)

        **y_pixel_size**: :ref:`NX_FLOAT <NX_FLOAT>` {units=\ :ref:`NX_LENGTH <NX_LENGTH>`}


        .. index:: distance (field)

        **distance**: :ref:`NX_FLOAT <NX_FLOAT>` {units=\ :ref:`NX_LENGTH <NX_LENGTH>`}


        .. index:: frame start number (field)

        **frame_start_number**: :ref:`NX_INT <NX_INT>`

          This is the start number of the first frame of a scan. In PX one often scans a couple 
          of frames on a give sample, then does something else, then returns to the same sample 
          and scans some more frames. Each time with a new data file.
          This number helps concatenating such measurements.

    **sample**: :ref:`NXsample`


      .. index:: name (field)

      **name**: :ref:`NX_CHAR <NX_CHAR>`

        Descriptive name of sample

      .. index:: orientation matrix (field)

      **orientation_matrix[3, 3]**: :ref:`NX_FLOAT <NX_FLOAT>`

        The orientation matrix according to Busing and 
        Levy conventions. This is not strictly necessary as 
        the UB can always be derived from the data.  But 
        let us bow to common usage which includes the 
        UB nearly always.

      .. index:: unit cell (field)

      **unit_cell[6]**: :ref:`NX_FLOAT <NX_FLOAT>`

        The unit cell, a, b, c, alpha, beta, gamma. 
        Again, not strictly necessary, but normally written.

      .. index:: temperature (field)

      **temperature[NP]**: :ref:`NX_FLOAT <NX_FLOAT>`

        The sample temperature or whatever sensor represents this value best

      .. index:: x translation (field)

      **x_translation**: :ref:`NX_FLOAT <NX_FLOAT>` {units=\ :ref:`NX_LENGTH <NX_LENGTH>`}

        Translation of the sample along the X-direction of the laboratory coordinate system

      .. index:: y translation (field)

      **y_translation**: :ref:`NX_FLOAT <NX_FLOAT>` {units=\ :ref:`NX_LENGTH <NX_LENGTH>`}

        Translation of the sample along the Y-direction of the laboratory coordinate system

      .. index:: distance (field)

      **distance**: :ref:`NX_FLOAT <NX_FLOAT>` {units=\ :ref:`NX_LENGTH <NX_LENGTH>`}

        Translation of the sample along the Z-direction of the laboratory coordinate system

    **control**: :ref:`NXmonitor`


      .. index:: mode (field)

      **mode**: :ref:`NX_CHAR <NX_CHAR>`

        Count to a preset value based on either clock time (timer)
        or received monitor counts (monitor).

        Any of these values: ``monitor`` | ``timer``

      .. index:: preset (field)

      **preset**: :ref:`NX_FLOAT <NX_FLOAT>`

        preset value for time or monitor

      .. index:: integral (field)

      **integral**: :ref:`NX_FLOAT <NX_FLOAT>` {units=\ :ref:`NX_ANY <NX_ANY>`}

        Total integral monitor counts

    **(data)**: :ref:`NXdata`

      The name of this group id data if there is only 
      one detector; if there are several the names will 
      be data1, data2, data3 and will point 
      to the corresponding detector groups in the 
      instrument hierarchy.

      **data** --> /NXentry/NXinstrument/NXdetector/data


**NXDL Source**:
  https://github.com/nexusformat/definitions/blob/master/applications/NXxbase.nxdl.xml
