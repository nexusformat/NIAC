.. auto-generated by script ../../../../utils/nxdl2rst.py from the NXDL source NXscan.nxdl.xml

.. index::
    ! NXscan (application definition)
    ! scan (application definition)
    see: scan (application definition); NXscan

.. _NXscan:

======
NXscan
======

**Status**:

  application definition, extends :ref:`NXobject`, version 1.0b

**Description**:

  Application definition for a generic scan instrument.

  This definition is more an 
  example then a stringent definition as the content of a given NeXus scan file needs to 
  differ for different types of scans. This example definition shows a scan like done 
  on a rotation camera: the sample is rotated and a detector image, the rotation angle
  and a monitor value is stored at each step in the scan. In the following, the symbol 
  ``NP`` is used to represent the number of scan points. These are the rules for 
  storing scan data in NeXus files which are implemented in this example:

  * Each value varied throughout a scan is stored as an array of 
    length ``NP`` at its respective location within the NeXus hierarchy.
  * For area detectors, ``NP`` is the first dimension, 
    example for a detector of 256x256:  ``data[NP,256,256]``
  * The NXdata group contains links to all variables varied in the scan and the data. 
    This to give an equivalent to the more familiar classical tabular representation of scans.

  These rules exist for a reason: HDF allows the first dimension of a data set to be 
  unlimited. This means the data can be appended too. Thus a NeXus file built according 
  to the rules given above can be used in the following way:

  * At the start of a scan, write all the static information.
  * At each scan point, append new data from varied variables 
    and the detector to the file.

**Symbols**:

  No symbol table

**Groups cited**:
  :ref:`NXdata`, :ref:`NXdetector`, :ref:`NXentry`, :ref:`NXinstrument`, :ref:`NXmonitor`, :ref:`NXsample`

.. index:: NXentry (base class); used in application definition, NXinstrument (base class); used in application definition, NXdetector (base class); used in application definition, NXsample (base class); used in application definition, NXmonitor (base class); used in application definition, NXdata (base class); used in application definition

**Structure**:

  **(entry)**: :ref:`NXentry`


    .. index:: title (field)

    **title**: :ref:`NX_CHAR <NX_CHAR>`


    .. index:: start time (field)

    **start_time**: :ref:`NX_DATE_TIME <NX_DATE_TIME>`


    .. index:: end time (field)

    **end_time**: :ref:`NX_DATE_TIME <NX_DATE_TIME>`


    .. index:: definition (field)

    **definition**: :ref:`NX_CHAR <NX_CHAR>`

      Official NeXus NXDL schema to which this file conforms

      Obligatory value:  ``NXscan``

    **(instrument)**: :ref:`NXinstrument`


      **(detector)**: :ref:`NXdetector`


        .. index:: data (field)

        **data[NP, xdim, ydim]**: :ref:`NX_INT <NX_INT>`


    **(sample)**: :ref:`NXsample`


      .. index:: rotation angle (field)

      **rotation_angle[NP]**: :ref:`NX_FLOAT <NX_FLOAT>`


    **(monitor)**: :ref:`NXmonitor`


      .. index:: data (field)

      **data[NP]**: :ref:`NX_INT <NX_INT>`


    **(data)**: :ref:`NXdata`


      **data** --> /NXentry/NXinstrument/NXdetector/data


      **rotation_angle** --> /NXentry/NXsample/rotation_angle


**NXDL Source**:
  https://github.com/nexusformat/definitions/blob/master/applications/NXscan.nxdl.xml
