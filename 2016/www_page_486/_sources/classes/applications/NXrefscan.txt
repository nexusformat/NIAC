.. auto-generated by script ../../../../utils/nxdl2rst.py from the NXDL source NXrefscan.nxdl.xml

.. index::
    ! NXrefscan (application definition)
    ! refscan (application definition)
    see: refscan (application definition); NXrefscan

.. _NXrefscan:

=========
NXrefscan
=========

**Status**:

  application definition, extends :ref:`NXobject`, version 1.0b

**Description**:

  This is an application definition for a monochromatic scanning reflectometer.

  It does not have the information to calculate the resolution
  since it does not have any apertures.

**Symbols**:

  No symbol table

**Groups cited**:
  :ref:`NXdata`, :ref:`NXdetector`, :ref:`NXentry`, :ref:`NXinstrument`, :ref:`NXmonitor`, :ref:`NXmonochromator`, :ref:`NXsample`, :ref:`NXsource`

.. index:: NXentry (base class); used in application definition, NXinstrument (base class); used in application definition, NXsource (base class); used in application definition, NXmonochromator (base class); used in application definition, NXdetector (base class); used in application definition, NXsample (base class); used in application definition, NXmonitor (base class); used in application definition, NXdata (base class); used in application definition

**Structure**:

  **entry**: :ref:`NXentry`


    .. index:: title (field)

    **title**: :ref:`NX_CHAR <NX_CHAR>`


    .. index:: start time (field)

    **start_time**: :ref:`NX_DATE_TIME <NX_DATE_TIME>`


    .. index:: end time (field)

    **end_time**: :ref:`NX_DATE_TIME <NX_DATE_TIME>`


    .. index:: definition (field)

    **definition**: :ref:`NX_CHAR <NX_CHAR>`

      Official NeXus NXDL schema to which this file conforms

      Obligatory value:  ``NXrefscan``

    **instrument**: :ref:`NXinstrument`


      **(source)**: :ref:`NXsource`


        .. index:: type (field)

        **type**: :ref:`NX_CHAR <NX_CHAR>`


        .. index:: name (field)

        **name**: :ref:`NX_CHAR <NX_CHAR>`


        .. index:: probe (field)

        **probe**: :ref:`NX_CHAR <NX_CHAR>`


          Any of these values: ``neutron`` | ``x-ray`` | ``electron``

      **monochromator**: :ref:`NXmonochromator`


        .. index:: wavelength (field)

        **wavelength**: :ref:`NX_FLOAT <NX_FLOAT>` {units=\ :ref:`NX_WAVELENGTH <NX_WAVELENGTH>`}


      **(detector)**: :ref:`NXdetector`


        .. index:: data (field)

        **data[NP]**: :ref:`NX_INT <NX_INT>`


        .. index:: polar angle (field)

        **polar_angle[NP]**: :ref:`NX_FLOAT <NX_FLOAT>` {units=\ :ref:`NX_ANGLE <NX_ANGLE>`}


    **sample**: :ref:`NXsample`


      .. index:: name (field)

      **name**: :ref:`NX_CHAR <NX_CHAR>`

        Descriptive name of sample

      .. index:: rotation angle (field)

      **rotation_angle[NP]**: :ref:`NX_FLOAT <NX_FLOAT>` {units=\ :ref:`NX_ANGLE <NX_ANGLE>`}


    **control**: :ref:`NXmonitor`


      .. index:: mode (field)

      **mode**: :ref:`NX_CHAR <NX_CHAR>`

        Count to a preset value based on either clock time (timer)
        or received monitor counts (monitor).

        Any of these values: ``monitor`` | ``timer``

      .. index:: preset (field)

      **preset**: :ref:`NX_FLOAT <NX_FLOAT>`

        preset value for time or monitor

      .. index:: data (field)

      **data[NP]**: :ref:`NX_FLOAT <NX_FLOAT>` {units=\ :ref:`NX_ANY <NX_ANY>`}

        Monitor counts for each step

    **data**: :ref:`NXdata`


      **data** --> /NXentry/NXinstrument/NXdetector/data


      **rotation_angle** --> /NXentry/NXsample/rotation_angle


      **polar_angle** --> /NXentry/NXinstrument/NXdetector/polar_angle


**NXDL Source**:
  https://github.com/nexusformat/definitions/blob/master/applications/NXrefscan.nxdl.xml
