.. auto-generated by script ../../../../utils/nxdl2rst.py from the NXDL source NXreftof.nxdl.xml

.. index::
    ! NXreftof (application definition)
    ! reftof (application definition)
    see: reftof (application definition); NXreftof

.. _NXreftof:

========
NXreftof
========

**Status**:

  application definition, extends :ref:`NXobject`, version 1.0b

**Description**:

  This is an application definition for raw data from a TOF reflectometer.

**Symbols**:

  No symbol table

**Groups cited**:
  :ref:`NXdata`, :ref:`NXdetector`, :ref:`NXdisk_chopper`, :ref:`NXentry`, :ref:`NXinstrument`, :ref:`NXmonitor`, :ref:`NXsample`

.. index:: NXentry (base class); used in application definition, NXinstrument (base class); used in application definition, NXdisk_chopper (base class); used in application definition, NXdetector (base class); used in application definition, NXsample (base class); used in application definition, NXmonitor (base class); used in application definition, NXdata (base class); used in application definition

**Structure**:

  **entry**: :ref:`NXentry`


    .. index:: title (field)

    **title**: :ref:`NX_CHAR <NX_CHAR>`


    .. index:: start time (field)

    **start_time**: :ref:`NX_DATE_TIME <NX_DATE_TIME>`


    .. index:: end time (field)

    **end_time**: :ref:`NX_DATE_TIME <NX_DATE_TIME>`


    .. index:: definition (field)

    **definition**: :ref:`NX_CHAR <NX_CHAR>`

      Official NeXus NXDL schema to which this file conforms

      Obligatory value:  ``NXreftof``

    **instrument**: :ref:`NXinstrument`


      .. index:: name (field)

      **name**: :ref:`NX_CHAR <NX_CHAR>`


      **chopper**: :ref:`NXdisk_chopper`


        .. index:: distance (field)

        **distance**: :ref:`NX_FLOAT <NX_FLOAT>` {units=\ :ref:`NX_LENGTH <NX_LENGTH>`}

          Distance between chopper and sample

      **detector**: :ref:`NXdetector`


        .. index:: data (field)

        **data[xsize, ysize, nTOF]**: :ref:`NX_INT <NX_INT>`


        .. index:: time of flight (field)

        **time_of_flight[nTOF]**: :ref:`NX_FLOAT <NX_FLOAT>` {units=\ :ref:`NX_TIME_OF_FLIGHT <NX_TIME_OF_FLIGHT>`}

          Array of time values for each bin in a time-of-flight
          measurement

        .. index:: distance (field)

        **distance**: :ref:`NX_FLOAT <NX_FLOAT>` {units=\ :ref:`NX_LENGTH <NX_LENGTH>`}


        .. index:: polar angle (field)

        **polar_angle**: :ref:`NX_FLOAT <NX_FLOAT>` {units=\ :ref:`NX_ANGLE <NX_ANGLE>`}


        .. index:: x pixel size (field)

        **x_pixel_size**: :ref:`NX_FLOAT <NX_FLOAT>` {units=\ :ref:`NX_LENGTH <NX_LENGTH>`}


        .. index:: y pixel size (field)

        **y_pixel_size**: :ref:`NX_FLOAT <NX_FLOAT>` {units=\ :ref:`NX_LENGTH <NX_LENGTH>`}


    **sample**: :ref:`NXsample`


      .. index:: name (field)

      **name**: :ref:`NX_CHAR <NX_CHAR>`

        Descriptive name of sample

      .. index:: rotation angle (field)

      **rotation_angle**: :ref:`NX_FLOAT <NX_FLOAT>` {units=\ :ref:`NX_ANGLE <NX_ANGLE>`}


    **control**: :ref:`NXmonitor`


      .. index:: mode (field)

      **mode**: :ref:`NX_CHAR <NX_CHAR>`

        Count to a preset value based on either clock time (timer)
        or received monitor counts (monitor).

        Any of these values: ``monitor`` | ``timer``

      .. index:: preset (field)

      **preset**: :ref:`NX_FLOAT <NX_FLOAT>` {units=\ :ref:`NX_ANY <NX_ANY>`}

        preset value for time or monitor

      .. index:: integral (field)

      **integral**: :ref:`NX_INT <NX_INT>`

        Total integral monitor counts

      .. index:: time of flight (field)

      **time_of_flight**: :ref:`NX_FLOAT <NX_FLOAT>` {units=\ :ref:`NX_TIME_OF_FLIGHT <NX_TIME_OF_FLIGHT>`}

        Time channels

      .. index:: data (field)

      **data**: :ref:`NX_INT <NX_INT>`

        Monitor counts in each time channel

    **data**: :ref:`NXdata`


      **data** --> /NXentry/NXinstrument/NXdetector/data


      **time_binning** --> /NXentry/NXinstrument/NXdetector/time_binning


**NXDL Source**:
  https://github.com/nexusformat/definitions/blob/master/applications/NXreftof.nxdl.xml
