.. auto-generated by script ../../../../utils/nxdl2rst.py from the NXDL source NXcanSAS.nxdl.xml

.. index::
    ! NXcanSAS (application definition)
    ! canSAS (application definition)
    see: canSAS (application definition); NXcanSAS

.. _NXcanSAS:

========
NXcanSAS
========

**Status**:

  application definition, extends :ref:`NXobject`, version 1.0

**Description**:

  Implementation of the :index:`canSAS` standard to store reduced small-angle scattering data of any dimension.

  For more details, see:

  * http://www.cansas.org/
  * http://www.cansas.org/formats/canSAS1d/1.1/doc/
  * https://github.com/canSAS-org/NXcanSAS_examples

  The minimum requirements for *reduced* small-angle scattering data 
  as described by canSAS are summarized in the following figure:

  .. figure:: canSAS/minimum.png
     :width: 60%

     The minimum requirements for *reduced* small-angle scattering data.
     (:download:`full image <canSAS/minimum.png>`)

  .. rubric::  Implementation of canSAS standard in NeXus

  This application definition is an implementation of the canSAS
  standard for storing both one-dimensional and multi-dimensional data.

  The canSAS data format has a structure similar to NeXus, not identical.
  To allow canSAS data to be expressed in NeXus, yet identifiable
  by the canSAS standard, an additional group attribute ``canSAS_class``
  was introduced.  Here is the mapping of some common groups.

  ===============  ============  ==========================
  group (*)        NX_class      canSAS_class
  ===============  ============  ==========================
  sasentry         NXentry       SASentry
  sasdata          NXdata        SASdata
  sasdetector      NXdetector    SASdetector
  sasinstrument    NXinstrument  SASinstrument
  sasnote          NXnote        SASnote
  sasprocess       NXprocess     SASprocess
  sasprocessnote   NXcollection  SASprocessnote
  sastransmission  NXdata        SAStransmission_spectrum
  sassample        NXsample      SASsample
  sassource        NXsource      SASsource
  ===============  ============  ==========================

  (*) The name of each group is a suggestion,
  not a fixed requirement and is chosen as fits each data file.  
  See the section on defining
  :ref:`NXDL group and field names <RegExpName>`.

      In canSAS1d, *orientation* (rotations of sample or detector)
      are described in terms of *roll*, *pitch*, and *yaw*.
      NeXus uses different terms as shown in the next table:

      =========   ==============================
      canSAS1d    NeXus
      =========   ==============================
      roll        ``polar_angle``
      pitch       ``x_axis_rotation`` (not expected or defined here)
      yaw         ``azimuthal_angle``
      =========   ==============================


**Symbols**:

  No symbol table

**Groups cited**:
  :ref:`NXaperture`, :ref:`NXcollection`, :ref:`NXcollimator`, :ref:`NXdata`, :ref:`NXdetector`, :ref:`NXentry`, :ref:`NXinstrument`, :ref:`NXnote`, :ref:`NXprocess`, :ref:`NXsample`, :ref:`NXsource`

.. index:: NXentry (base class); used in application definition, NXdata (base class); used in application definition, NXinstrument (base class); used in application definition, NXcollimator (base class); used in application definition, NXaperture (base class); used in application definition, NXdetector (base class); used in application definition, NXsource (base class); used in application definition, NXsample (base class); used in application definition, NXprocess (base class); used in application definition, NXnote (base class); used in application definition, NXcollection (base class); used in application definition

**Structure**:

  **(entry)**: :ref:`NXentry`

    .. index:: NXcanSAS (contributed definition); SASentry

    Place the canSAS ``SASentry`` group as a child of a NeXus ``NXentry`` group
    (when data from multiple techniques are being stored)
    or as a replacement for the ``NXentry`` group.

    Note: It is required for all numerical objects to provide
    a *units* attribute that describes the engineering units. 
    Use the Unidata UDunits [#]_ specification 
    as this is compatible with various community standards.

    .. [#] The UDunits specification also includes instructions for derived units.

    .. index:: default (group attribute)

    **@default**: :ref:`NX_CHAR <NX_CHAR>`

      .. index:: plotting

      Declares which :ref:`NXdata` group 
      contains the data to be shown by default.
      It is needed to resolve ambiguity when more than one :ref:`NXdata` group exists. 
      The value is the name of the default :ref:`NXdata` group.

    .. index:: canSAS class (group attribute)

    **@canSAS_class**: :ref:`NX_CHAR <NX_CHAR>`

      Official canSAS group: **SASentry**

      Obligatory value:  ``SASentry``

    .. index:: version (group attribute)

    **@version**: :ref:`NX_CHAR <NX_CHAR>`

      Describes the version of the canSAS standard used to write this data. 
      This must be a text (not numerical) representation. Such as::

        @version="1.0"


      Obligatory value:  ``1.0``

    .. index:: definition (field)

    **definition**: :ref:`NX_CHAR <NX_CHAR>`

      Official NeXus NXDL schema to which this subentry conforms.

      Obligatory value:  ``NXcanSAS``

    .. index:: title (field)

    **title**: :ref:`NX_CHAR <NX_CHAR>`

      Title of this *SASentry*.

    .. index:: run (field)

    **run**: :ref:`NX_CHAR <NX_CHAR>`

      Run identification for this *SASentry*. 
      For many facilities, this is an integer. 
      Use multiple instances of ``run`` as needed, keeping
      in mind that HDF5 requires unique names for all entities
      in a group.

      .. index:: name (field attribute)

      **@name**: :ref:`NX_CHAR <NX_CHAR>`

        Optional string attribute to identify this particular *run*. 
        Could use this to associate (correlate) multiple *SASdata* elements with *run* elements.

    **(data)**: :ref:`NXdata`

      A *SASData* group contains reduced a single small-angle scattering data set 
      that can be represented as :math:`I(\vec{Q})` or :math:`I(|\vec{Q}|)`.

      .. figure:: canSAS/SASdata.png
        :width: 60%

        The *SASdata* element
        (:download:`full image <canSAS/SASdata.png>`)

      *Q* can be either a vector (:math:`\vec{Q}`) or a vector magnitude (:math:`|\vec{Q}|`)

      The name of each *SASdata* must be unique within a SASentry group.  Such as ``sasdata01``.

      A *SASdata* group has several attributes:

      * I_axes
      * Q_indices
      * Mask_indices

      To indicate the dependency relationships of other varied parameters, 
      use attributes similar to ``@Mask_indices`` (such as ``@Temperature_indices``
      or ``@Pressure_indices``).

      .. index:: canSAS class (group attribute)

      **@canSAS_class**: :ref:`NX_CHAR <NX_CHAR>`

        Official canSAS group: :index:`NXcanSAS (contributed definition); SASdata`

        Obligatory value:  ``SASdata``

      .. index:: signal (group attribute)

      **@signal**: :ref:`NX_CHAR <NX_CHAR>`

        Name of the default data field.

        Obligatory value: 

          * ``I``: For canSAS **SASdata**, this is always "I".


      .. index:: I axes (group attribute)

      **@I_axes**: :ref:`NX_CHAR <NX_CHAR>`

        String array that defines the independent data fields used in 
        the default plot for all of the dimensions of the *signal* field
        (the *signal* field is the field in this group that is named by
        the ``signal`` attribute of this group). 
        One entry is provided for every dimension of the ``I`` data object.  
        Such as::

          @I_axes="Temperature", "Time", "Pressure", "Q", "Q"

        Since there are five items in the list, the intensity field of this example
        ``I`` must be a five-dimensional array (rank=5).

      .. index:: I uncertainties (group attribute)

      **@I_uncertainties**: :ref:`NX_CHAR <NX_CHAR>`

        Generally, this is the estimate of the uncertainty of each :math:`I`.
        Typically the estimated standard deviation.  
        For Poisson statistics, use :math:`1/\sqrt{I}`.

        (optional for numerical arrays) 
        Name of the data object (in this SASdata group) that provides the 
        uncertainty to be used for data analysis.

        *Idev* is the canonical name from the 1D standard.  
        The multi-D standard allows for this name to be described in this attribute.
        Such as::

          @I_uncertainties="Idev"


      .. index:: Q indices (group attribute)

      **@Q_indices**: :ref:`NX_INT <NX_INT>`

        Integer or integer array that describes which indices 
        (of the :math:`I` data object) are used to 
        reference the ``Q`` data object. The items in this array 
        use zero-based indexing.  Such as::

            @Q_indices=1,3,4

        which indicates that ``Q`` requires three indices
        from the :math:`I` data object: one for time and
        two for Q position.   Thus, in this example, the
        ``Q`` data is time-dependent: :math:`\vec{Q}(t)`.

      .. index:: Q uncertainties (group attribute)

      **@Q_uncertainties**: :ref:`NX_CHAR <NX_CHAR>`

        (optional for numerical arrays) 
        Generally, this is the estimate of the uncertainty of each :math:`Q`.
        Typically the estimated standard deviation.  
        Names the data object (in this SASdata group) that provides the 
        uncertainty to be used for data analysis.  Such as::

            @Q_uncertainties="Qdev"

        Can use this to describe the slit-length at each datum.
        Use a subgroup to describe any supplementary uncertainty data.

        To specify two-dimensional uncertainty, such as (*dQw*, *dQl*), 
        use a string array, such as::

            @Q_uncertainties="dQw", "dQl"


      .. index:: Mask indices (group attribute)

      **@Mask_indices**: :ref:`NX_CHAR <NX_CHAR>`

        Integer or integer array that describes which indices
        (of the :math:`I` data object) are used to 
        reference the ``Mask`` data object.  The items in this
        array use zero-based indexing.  Such as::

            @Mask_indices=3,4

        which indicates that Q requires two indices
        from the :math:`I` data object for Q position.

      .. index:: Q (field)

      **Q**: :ref:`NX_NUMBER <NX_NUMBER>` {units=\ :ref:`NX_PER_LENGTH <NX_PER_LENGTH>`}

        .. index:: NXcanSAS (contributed definition); Q

        Array of :math:`Q` data to accompany :math:`I`.

        .. figure:: canSAS/Q-geometry.jpg
        	:width: 60%

        	The :math:`\vec{Q}` geometry.
        	(:download:`full image <canSAS/Q-geometry.jpg>`)

        :math:`Q` may be represented either
        as the three-dimensional scattering vector :math:`\vec{Q}`
        or by the magnitude of the scattering vector, :math:`|\vec{Q}|`.

        .. math::  |\vec{Q}| = (4\pi/\lambda) sin(\theta)

        When we write :math:`Q`, we may refer to either or both of 
        :math:`|\vec{Q}|` 
        or :math:`\vec{Q}`,  depending on the context.

      .. index:: I (field)

      **I**: :ref:`NX_NUMBER <NX_NUMBER>`

        .. index:: NXcanSAS (contributed definition); I

        Array of intensity (:math:`I`) data.

        The intensity may be represented in one of these forms:

        **absolute units**: :math:`d\Sigma/d\Omega(Q)`
        differential cross-section
        per unit volume per unit solid angle (typical units: 1/cm/sr)

        **absolute units**: :math:`d\sigma/d\Omega(Q)`
        differential cross-section
        per unit atom per unit solid angle (typical units: cm^2)

        **arbitrary units**: :math:`I(Q)`
        usually a ratio of two detectors 
        but units are meaningless (typical units: a.u.)

        This presents a few problems 
        for analysis software to sort out when reading the data.
        Fortunately, it is possible to analyze the *units* to determine which type of
        intensity is being reported and make choices at the time the file is read. But this is
        an area for consideration and possible improvement.

        One problem arises with software that automatically converts data into some canonical
        units used by that software. The software should not convert units between these different
        types of intensity indiscriminately.

        A second problem is that when arbitrary units are used, then the set of possible
        analytical results is restricted.  With such units, no meaningful volume fraction 
        or number density can be determined directly from :math:`I(Q)`.

        In some cases, it is possible to apply a factor to convert the arbitrary 
        units to an absolute scale.  This should be considered as a possibility 
        of the analysis process.

      .. index:: Idev (field)

      **Idev**: (optional) :ref:`NX_NUMBER <NX_NUMBER>` {units=\ :ref:`NX_PER_LENGTH <NX_PER_LENGTH>`}

        .. index:: NXcanSAS (contributed definition); Idev

        Estimated uncertainty (usually standard deviation)
        in :math:`I`.  Must have the same units as :math:`I`.

        When present, the name of this field is also 
        recorded in the *uncertainties* attribute of *I*, as in::

            I/@uncertainties="Idev"


      .. index:: Qdev (field)

      **Qdev**: (optional) :ref:`NX_NUMBER <NX_NUMBER>` {units=\ :ref:`NX_PER_LENGTH <NX_PER_LENGTH>`}

        .. index:: NXcanSAS (contributed definition); Qdev

        Estimated uncertainty (usually standard deviation)
        in :math:`Q`.  Must have the same units as :math:`Q`.

        When present, the name of this field is also 
        recorded in the *uncertainties* attribute of *Q*, 
        as in::

            Q/@uncertainties="Qdev"

            Q/@uncertainties="dQw", "dQl"


      .. index:: dQw (field)

      **dQw**: (optional) :ref:`NX_NUMBER <NX_NUMBER>` {units=\ :ref:`NX_PER_LENGTH <NX_PER_LENGTH>`}

        .. index:: NXcanSAS (contributed definition); dQw

        :math:`Q` resolution along the axis of scanning 
        (the high-resolution *slit width* direction). 
        Useful for defining resolution data from 
        slit-smearing instruments such as Bonse-Hart geometry.
        Must have the same units as :math:`Q`.

        When present, the name of this field is also 
        recorded in the *uncertainties* attribute of *Q*, 
        as in::

            Q/@uncertainties="dQw", "dQl"


      .. index:: dQl (field)

      **dQl**: (optional) :ref:`NX_NUMBER <NX_NUMBER>` {units=\ :ref:`NX_PER_LENGTH <NX_PER_LENGTH>`}

        .. index:: NXcanSAS (contributed definition); dQl

        :math:`Q` resolution perpendicular to the axis of scanning 
        (the low-resolution *slit length* direction). 
        Useful for defining resolution data from 
        slit-smearing instruments such as Bonse-Hart geometry.
        Must have the same units as :math:`Q`.

        When present, the name of this field is also 
        recorded in the *uncertainties* attribute of *Q*, 
        as in::

            Q/@uncertainties="dQw", "dQl"


      .. index:: Qmean (field)

      **Qmean**: (optional) :ref:`NX_NUMBER <NX_NUMBER>` {units=\ :ref:`NX_PER_LENGTH <NX_PER_LENGTH>`}

        Mean value of :math:`Q` for this data point. 
        Useful when describing data that has been 
        binned from higher-resolution data. 
        It is unexpected for ``Q`` and ``Qmean`` to have different units.

      .. index:: ShadowFactor (field)

      **ShadowFactor**: (optional) :ref:`NX_CHAR <NX_CHAR>` {units=\ :ref:`NX_DIMENSIONLESS <NX_DIMENSIONLESS>`}

        A numerical factor applied to pixels affected by the beam stop penumbra. 
        Used in data files from NIST/NCNR instruments.

        See:  J.G. Barker and J.S. Pedersen (1995) *J. Appl. Cryst.* **28**, 105-114.

    **(instrument)**: :ref:`NXinstrument`

      This the SAS instrument.

      .. figure:: canSAS/SASinstrument.png
        :width: 60%

        The *SASinstrument* element
        (:download:`full image <canSAS/SASinstrument.png>`)


      .. index:: canSAS class (group attribute)

      **@canSAS_class**: :ref:`NX_CHAR <NX_CHAR>`

        Official canSAS group: :index:`NXcanSAS (contributed definition); SASinstrument`

        Obligatory value:  ``SASinstrument``

      **(collimator)**: (optional) :ref:`NXcollimator`

        Description of a collimating element in the instrument.

        .. figure:: canSAS/SAScollimation.png
          :width: 60%

          The *SAScollimation* element
          (:download:`full image <canSAS/SAScollimation.png>`)


        .. index:: canSAS class (group attribute)

        **@canSAS_class**: :ref:`NX_CHAR <NX_CHAR>`

          Official canSAS group: :index:`NXcanSAS (contributed definition); SAScollimation`

          Obligatory value:  ``SAScollimation``

        .. index:: length (field)

        **length**: (optional) :ref:`NX_NUMBER <NX_NUMBER>` {units=\ :ref:`NX_LENGTH <NX_LENGTH>`}

          Amount/length of collimation inserted (as on a SANS instrument)

        .. index:: distance (field)

        **distance**: (optional) :ref:`NX_NUMBER <NX_NUMBER>` {units=\ :ref:`NX_LENGTH <NX_LENGTH>`}

          Distance from this collimation element to the sample

        **aperture**: (optional) :ref:`NXaperture`

          Name of "aperture" is only a suggestion. 
          Base class could be either **NXpinhole** or **NXslit**.
          But **NXaperture** is generic and limits the variation in data files.

          .. index:: shape (field)

          **shape**: :ref:`NX_CHAR <NX_CHAR>`

            describe the type of aperture (pinhole, 4-blade slit, Soller slit, ...)

          .. index:: x gap (field)

          **x_gap**: (optional) :ref:`NX_NUMBER <NX_NUMBER>` {units=\ :ref:`NX_LENGTH <NX_LENGTH>`}

            opening along the :math:`x` axis

          .. index:: y gap (field)

          **y_gap**: (optional) :ref:`NX_NUMBER <NX_NUMBER>` {units=\ :ref:`NX_LENGTH <NX_LENGTH>`}

            opening along the :math:`y` axis

      **(detector)**: (optional) :ref:`NXdetector`

        Description of a detector in the instrument.

        .. figure:: canSAS/SASdetector.png
          :width: 60%

          The *SASdetector* element
          (:download:`full image <canSAS/SASdetector.png>`)


        .. index:: canSAS class (group attribute)

        **@canSAS_class**: :ref:`NX_CHAR <NX_CHAR>`

          Official canSAS group: :index:`NXcanSAS (contributed definition); SASdetector`

          Obligatory value:  ``SASdetector``

        .. index:: name (field)

        **name**: :ref:`NX_CHAR <NX_CHAR>`

          Identifies the name of this detector

        .. index:: SDD (field)

        **SDD**: (optional) :ref:`NX_NUMBER <NX_NUMBER>` {units=\ :ref:`NX_LENGTH <NX_LENGTH>`}

          Distance between sample and detector.

          Note: In NXdetector, the ``distance`` field records the 
          distance to the previous component ... most often the sample.
          This use is the same as ``SDD`` for most SAS 
          instruments but not all.  For example, Bonse-Hart cameras 
          have one or more crystals between the sample and detector.

          We define here the field ``SDD`` to document without
          ambiguity the distance between sample and detector.

        .. index:: slit length (field)

        **slit_length**: (optional) :ref:`NX_NUMBER <NX_NUMBER>` {units=\ :ref:`NX_PER_LENGTH <NX_PER_LENGTH>`}

          Slit length of the instrument for this detector, 
          expressed in the same units as :math:`Q`.

        .. index:: x position (field)

        **x_position**: (optional) :ref:`NX_CHAR <NX_CHAR>`

          Location of the detector in :math:`x`

        .. index:: y position (field)

        **y_position**: (optional) :ref:`NX_CHAR <NX_CHAR>`

          Location of the detector in :math:`y`

        .. index:: polar angle (field)

        **polar_angle**: (optional) :ref:`NX_CHAR <NX_CHAR>`

          Rotation of the detector about the :math:`z` axis (roll)

        .. index:: azimuthal angle (field)

        **azimuthal_angle**: (optional) :ref:`NX_CHAR <NX_CHAR>`

          Rotation of the detector about the :math:`y` axis (yaw)

        .. index:: beam center x (field)

        **beam_center_x**: (optional) :ref:`NX_FLOAT <NX_FLOAT>` {units=\ :ref:`NX_LENGTH <NX_LENGTH>`}

          Position of the beam center on the detector.

          This is the x position where the direct beam would hit the detector plane.
          This is a length, not a pixel position, and can be outside of the actual
          detector.

        .. index:: beam center y (field)

        **beam_center_y**: (optional) :ref:`NX_FLOAT <NX_FLOAT>` {units=\ :ref:`NX_LENGTH <NX_LENGTH>`}

          Position of the beam center on the detector.

          This is the y position where the direct beam would hit the detector plane.
          This is a length, not a pixel position, and can be outside of the actual
          detector.

        .. index:: x pixel size (field)

        **x_pixel_size**: (optional) :ref:`NX_FLOAT <NX_FLOAT>` {units=\ :ref:`NX_LENGTH <NX_LENGTH>`}

          Size of each detector pixel. If it is scalar all pixels are the same size

        .. index:: y pixel size (field)

        **y_pixel_size**: (optional) :ref:`NX_FLOAT <NX_FLOAT>` {units=\ :ref:`NX_LENGTH <NX_LENGTH>`}

          Size of each detector pixel. If it is scalar all pixels are the same size

      **(source)**: (optional) :ref:`NXsource`

        Description of the radiation source.

        .. figure:: canSAS/SASsource.png
          :width: 60%

          The *SASsource* element
          (:download:`full image <canSAS/SASsource.png>`)


        .. index:: canSAS class (group attribute)

        **@canSAS_class**: :ref:`NX_CHAR <NX_CHAR>`

          Official canSAS group: :index:`NXcanSAS (contributed definition); SASsource`

          Obligatory value:  ``SASsource``

        .. index:: radiation (field)

        **radiation**: :ref:`NX_CHAR <NX_CHAR>`

          Name of the radiation used.
          Note that this is **not** the name of the facility!

          Any of these values:

            * ``Spallation Neutron Source``

            * ``Pulsed Reactor Neutron Source``

            * ``Reactor Neutron Source``

            * ``Synchrotron X-ray Source``

            * ``Pulsed Muon Source``

            * ``Rotating Anode X-ray``

            * ``Fixed Tube X-ray``

            * ``UV Laser``

            * ``Free-Electron Laser``

            * ``Optical Laser``

            * ``Ion Source``

            * ``UV Plasma Source``

            * ``neutron``

            * ``x-ray``

            * ``muon``

            * ``electron``

            * ``ultraviolet``

            * ``visible light``

            * ``positron``

            * ``proton``


        .. index:: beam shape (field)

        **beam_shape**: (optional) :ref:`NX_CHAR <NX_CHAR>`

          Text description of the shape of the beam (incident on the sample).

        .. index:: incident wavelength (field)

        **incident_wavelength**: (optional) :ref:`NX_NUMBER <NX_NUMBER>` {units=\ :ref:`NX_WAVELENGTH <NX_WAVELENGTH>`}

          wavelength (:math:`\lambda`) of radiation incident on the sample

        .. index:: wavelength min (field)

        **wavelength_min**: (optional) :ref:`NX_NUMBER <NX_NUMBER>` {units=\ :ref:`NX_WAVELENGTH <NX_WAVELENGTH>`}

          Some facilities specify wavelength using a range. 
          This is the lowest wavelength in such a range.

        .. index:: wavelength max (field)

        **wavelength_max**: (optional) :ref:`NX_NUMBER <NX_NUMBER>` {units=\ :ref:`NX_WAVELENGTH <NX_WAVELENGTH>`}

          Some facilities specify wavelength using a range. 
          This is the highest wavelength in such a range.

        .. index:: incident wavelength spread (field)

        **incident_wavelength_spread**: (optional) :ref:`NX_NUMBER <NX_NUMBER>` {units=\ :ref:`NX_WAVELENGTH <NX_WAVELENGTH>`}

          Some facilities specify wavelength using a range. 
          This is the width (FWHM) of such a range.

        .. index:: beam size x (field)

        **beam_size_x**: (optional) :ref:`NX_NUMBER <NX_NUMBER>` {units=\ :ref:`NX_LENGTH <NX_LENGTH>`}

          Size of the incident beam along the x axis.

        .. index:: beam size y (field)

        **beam_size_y**: (optional) :ref:`NX_NUMBER <NX_NUMBER>` {units=\ :ref:`NX_LENGTH <NX_LENGTH>`}

          Size of the incident beam along the y axis.

    **(sample)**: :ref:`NXsample`

      Description of the sample.

      .. figure:: canSAS/SASsample.png
        :width: 60%

        The *SASsample* element
        (:download:`full image <canSAS/SASsample.png>`)


      .. index:: canSAS class (group attribute)

      **@canSAS_class**: :ref:`NX_CHAR <NX_CHAR>`

        Official canSAS group: :index:`NXcanSAS (contributed definition); SASsample`

        Obligatory value:  ``SASsample``

      .. index:: name (field)

      **name**: :ref:`NX_CHAR <NX_CHAR>`

        **ID**: Text string that identifies this sample.

      .. index:: thickness (field)

      **thickness**: (optional) :ref:`NX_FLOAT <NX_FLOAT>` {units=\ :ref:`NX_LENGTH <NX_LENGTH>`}

        Thickness of this sample

      .. index:: transmission (field)

      **transmission**: (optional) :ref:`NX_NUMBER <NX_NUMBER>` {units=\ :ref:`NX_DIMENSIONLESS <NX_DIMENSIONLESS>`}

        Transmission (:math:`I/I_0`) of this sample. 
        Note that there is no *units* attribute as this number is dimensionless.

      .. index:: temperature (field)

      **temperature**: (optional) :ref:`NX_NUMBER <NX_NUMBER>` {units=\ :ref:`NX_TEMPERATURE <NX_TEMPERATURE>`}

        Temperature of this sample.

      .. index:: details (field)

      **details**: (optional) :ref:`NX_CHAR <NX_CHAR>`

        Any additional sample details.

      .. index:: x position (field)

      **x_position**: (optional) :ref:`NX_CHAR <NX_CHAR>`

        Location of the sample in :math:`x`

      .. index:: y position (field)

      **y_position**: (optional) :ref:`NX_CHAR <NX_CHAR>`

        Location of the sample in :math:`y`

      .. index:: polar angle (field)

      **polar_angle**: (optional) :ref:`NX_CHAR <NX_CHAR>`

        Rotation of the sample about the :math:`z` axis (roll)

      .. index:: azimuthal angle (field)

      **azimuthal_angle**: (optional) :ref:`NX_CHAR <NX_CHAR>`

        Rotation of the sample about the :math:`y` axis (yaw)

    **(process)**: (optional) :ref:`NXprocess`

      Description of a processing or analysis step.

      .. figure:: canSAS/SASprocess.png
        :width: 60%

        The *SASprocess* element
        (:download:`full image <canSAS/SASprocess.png>`)

      Add additional fields as needed to describe value(s) of any 
      variable, parameter, or term related to the *SASprocess* step.
      Be sure to include *units* attributes for all numerical fields.

      .. index:: canSAS class (group attribute)

      **@canSAS_class**: :ref:`NX_CHAR <NX_CHAR>`

        Official canSAS group: :index:`NXcanSAS (contributed definition); SASprocess`

        Obligatory value:  ``SASprocess``

      .. index:: name (field)

      **name**: (optional) :ref:`NX_CHAR <NX_CHAR>`

        Optional name for this data processing or analysis step

      .. index:: date (field)

      **date**: (optional) :ref:`NX_DATE_TIME <NX_DATE_TIME>`

        Optional date for this data processing or analysis step. [#iso8601]_

        .. [#iso8601]  ISO-8601 standard time representation.

        	NeXus dates and times are reported in ISO-8601 
        	(e.g., ``yyyy-mm-ddThh:mm:ss``) 
        	or modified ISO-8601 (e.g., ``yyyy-mm-dd hh:mm:ss``).

        	See: http://www.w3.org/TR/NOTE-datetime 
        	or http://en.wikipedia.org/wiki/ISO_8601 for more details.

      .. index:: description (field)

      **description**: (optional) :ref:`NX_CHAR <NX_CHAR>`

        Optional description for this data processing or analysis step

      .. index:: term (field)

      **term**: (optional) :ref:`NX_CHAR <NX_CHAR>`

        Specifies the value of a single variable, parameter, 
        or term (while defined here as a string, it could be a number) 
        related to the *SASprocess* step.

        Note:
        The name *term* is not required, it could take any name,
        as long as the name is unique within this group.

      **(note)**: (optional) :ref:`NXnote`

        Any additional notes or subprocessing steps will be documented here.

        An **NXnote** group can be added to any NeXus group at or below the 
        **NXentry** group.  It is shown here as a suggestion of a good place 
        to *consider* its use.

      **sasprocessnote**: (optional) :ref:`NXcollection`

        Describes anything about *SASprocess* that is not already described.

        Any content not defined in the canSAS standard can be placed at this point.

        Note:
        The name *sasprocessnote* is not required, it could take any name,
        as long as the name is unique within the **NXprocess** group.

        .. index:: canSAS class (group attribute)

        **@canSAS_class**: :ref:`NX_CHAR <NX_CHAR>`

          Official canSAS group: :index:`NXcanSAS (contributed definition); SASprocessnote`

          Obligatory value:  ``SASprocessnote``

    **(collection)**: (optional) :ref:`NXcollection`

      Free form description of anything not covered by other elements.

      .. index:: canSAS class (group attribute)

      **@canSAS_class**: :ref:`NX_CHAR <NX_CHAR>`

        Official canSAS group: :index:`NXcanSAS (contributed definition); SASnote`

        Obligatory value:  ``SASnote``

    **(data)**: (optional) :ref:`NXdata`

      The *SAStransmission_spectrum* element

      This describes certain data obtained from a variable-wavelength source
      such as pulsed-neutron source.

      .. figure:: canSAS/SAStransmission_spectrum.png
        :width: 60%

        The *SAStransmission_spectrum* element
        (:download:`full image <canSAS/SAStransmission_spectrum.png>`)


      .. index:: canSAS class (group attribute)

      **@canSAS_class**: :ref:`NX_CHAR <NX_CHAR>`

        Official canSAS group: :index:`NXcanSAS (contributed definition); SAStransmission_spectrum`

        Obligatory value:  ``SAStransmission_spectrum``

      .. index:: signal (group attribute)

      **@signal**: :ref:`NX_CHAR <NX_CHAR>`

        Name of the default data field.

        Obligatory value: 

          * ``T``: For **SAStransmission_spectrum**, this is always "T".


      .. index:: T axes (group attribute)

      **@T_axes**: :ref:`NX_CHAR <NX_CHAR>`


        Obligatory value: 

          * ``T``: the wavelengths field (as a dimension scale) corresponding to this transmission


      .. index:: T uncertainties (group attribute)

      **@T_uncertainties**: :ref:`NX_CHAR <NX_CHAR>`

        Estimate of the uncertainty of each transmission :math:`T`.

      .. index:: name (group attribute)

      **@name**: :ref:`NX_CHAR <NX_CHAR>`

        Identify what type of spectrum is being described.
        It is expected that this value will take either of these two values:

        ======  ==============================================
        value   meaning
        ======  ==============================================
        sample  measurement with the sample and container
        can     measurement with just the container
        ======  ==============================================

      .. index:: timestamp (group attribute)

      **@timestamp**: :ref:`NX_DATE_TIME <NX_DATE_TIME>`

        ISO-8601 time [#iso8601]_

      .. index:: lambda (field)

      **lambda**: :ref:`NX_NUMBER <NX_NUMBER>` {units=\ :ref:`NX_WAVELENGTH <NX_WAVELENGTH>`}

        Wavelength of the radiation.

      .. index:: T (field)

      **T**: :ref:`NX_NUMBER <NX_NUMBER>` {units=\ :ref:`NX_DIMENSIONLESS <NX_DIMENSIONLESS>`}

        Transmission value (:math:`I/I_0`)

      .. index:: Tdev (field)

      **Tdev**: :ref:`NX_NUMBER <NX_NUMBER>` {units=\ :ref:`NX_PER_LENGTH <NX_PER_LENGTH>`}

        .. index:: NXcanSAS (contributed definition); Tdev

        Estimated uncertainty (usually standard deviation)
        in :math:`T`.  Must have the same units as :math:`T`.

        When present, the name of this field is also 
        recorded in the *uncertainties* attribute of *T*, as in::

            T/@uncertainties="Tdev"


**NXDL Source**:
  https://github.com/nexusformat/definitions/blob/master/applications/NXcanSAS.nxdl.xml
